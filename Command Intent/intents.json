{
    "intents": [
        {
            "intent": "Declaration",
            "keywords": [
                "new",
                "declare",
                "declare variable",
                "declare function",
                "define",
                "define a new function named",
                "create",
                "create variable",
                "create function",
                "initialize",
                "initialize a new variable",
                "Create a new variable.",
                "Declare a variable.",
                "Initiate a new variable.",
                "Set up a variable.",
                "Introduce a new variable.",
                "Establish a variable.",
                "Declare a fresh variable.",
                "Instantiate a variable.",
                "Announce a variable.",
                "Define a variable.",
                "Declare an integer variable named 'count'.",
                "Create a string variable called 'message'.",
                "Initialize a float variable named 'temperature'.",
                "Declare a boolean variable 'is_enabled' and set it to True.",
                "Create a list variable 'numbers' to store numeric values.",
                "Initialize a dictionary variable 'user_data' for storing user information.",
                "Declare a constant variable 'PI' and set it to 3.14.",
                "Create a tuple variable 'coordinates' for storing (x, y) pairs.",
                "Initialize a set variable 'unique_values' with distinct elements.",
                "Declare a variable 'config' and assign a configuration object."
            ],
            "responses": [
                "declaration intent detected"
            ],
            "extension": {
                "function":"",
                "entities": true,
                "responses": [
                    "declare a new variable %%NAME%% with value %%VALUE%%",
                    "declare a new function %%NAME%% with parameters %%PARAMS%%"
                ]
            },
            "entities": []
            
        },
        {
            "intent": "Assignment Operation",
            "keywords": [
                "assign",
                "assign the value",
                "set",
                "set the varible to value",
                "put",
                "put the value",
                "store",
                "store the value",
                "Set the variable 'count' to 10.",
                "Initialize 'price' with the value 19.99.",
                "Let 'quantity' be equal to 100.",
                "Store the result in the variable 'result'.",
                "Give 'score' the value of 95.",
                "Put 3.14 into the variable 'pi'.",
                "Update 'counter' to 0.",
                "Assign the string 'Hello' to 'greeting'.",
                "Initialize 'temperature' with 22.5 degrees.",
                "Assign the value 5 to the variable 'total'.",
                "Assign the value 10 to the variable 'count'.",
                "Set the string 'Hello' to the variable 'greeting'.",
                "Initialize the variable 'pi' with the value 3.14159.",
                "Assign the result of 'x + y' to the variable 'sum'.",
                "Store the user input in the variable 'user_response'.",
                "Set the list [1, 2, 3] to the variable 'numbers'.",
                "Assign the current date to the variable 'current_date'.",
                "Initialize the boolean variable 'is_ready' to False.",
                "Assign the square root of 'x' to the variable 'root_x'.",
                "Set the dictionary {'key': 'value'} to the variable 'data'."
            ],
            "responses": [
                "assignment intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Conditional Statement",
            "keywords": [
                "compare",
                "and",
                "or",
                "if",
                "else",
                "condition",
                "condition statement",
                "equal",
                "not equal",
                "compare between",
                "greater than",
                "smaller than" ,
                "If the temperature is above 30 degrees, turn on the air conditioner.",
                "When the account balance is less than $10, send a low balance alert.",
                "If the input is not valid, display an error message.",
                "When the variable 'status' is 'active', proceed with the operation.",
                "Check whether the file exists; if so, open it for editing.",
                "If the number is even, double it; otherwise, leave it unchanged.",
                "Evaluate the condition and execute the code block if it's true.",
                "If the customer is a premium member, offer a discount.",
                "Check if the response code is 200; if not, handle the error."     ,
                "Check if the user is logged in; if true, show the dashboard."
            ],
            "responses": [
                "conditoinal intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Iterative Operation",
            "keywords": [
                "loop",
                "for",
                "while",
                "do",
                "do while",
                "repeat",
                "iterate",
                "iterate over",
                "iterate through",
                "search",
                "search for",
                "search in",
                "Run a 'for' loop to iterate over the array elements.",
                "Implement a 'while' loop until the condition is false.",
                "Use a 'foreach' loop to iterate through the collection.",
                "Apply a 'do-while' loop for at least one iteration.",
                "Execute a 'for' loop from 1 to 10 for incremental steps.",
                "Run a 'while' loop until the user input is valid.",
                "Utilize a 'for' loop to process each character in the string.",
                "Implement a 'do-while' loop to prompt the user until they confirm.",
                "Use a 'foreach' loop for concurrent processing of elements.",
                "Apply a nested 'for' loop to traverse a two-dimensional array.",
                "Iterate through the list and perform an action on each item.",
                "Repeat the process until a certain condition is met.",
                "Cycle through the elements and update their values.",
                "Continue processing until the specified criteria are satisfied.",
                "Go through the dataset and apply a transformation to each entry.",
                "Loop over the array and check for specific conditions.",
                "Perform an iterative operation on the given input.",
                "Iterate over the collection and extract relevant information.",
                "Keep executing the code block until a stopping condition is reached.",
                "Run a loop to handle multiple cases based on user input."
            ],
            "responses": [
                "iterative intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Insertion",
            "keywords": [
                "Insert a semicolon at the end of the line.",
                "Place a space between the function parameters.",
                "Include a semicolon to terminate the statement.",
                "Append a colon to the label.",
                "Put a space around the arithmetic operator.",
                "Insert a semicolon to complete the statement.",
                "Add a colon for indentation.",
                "Include a space before and after the assignment operator.",
                "Place a semicolon to end the block.",
                "Add a colon after the condition.",
                "Insert a semicolon at the end of line 5.",
                "Add a colon after the condition in line 10.",
                "Place a space between parameters on line 15.",
                "Include a semicolon to terminate the statement at line 8.",
                "Append a colon to the label in line 3.",
                "Put a space around the arithmetic operator on line 12.",
                "Insert a semicolon to complete the statement at line 6.",
                "Add a colon for indentation in line 20.",
                "Include a space before and after the assignment operator on line 13.",
                "Place a semicolon to end the block at line 25."
        
            ],
            "responses": [
                "Insertion intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Array Operation",
            "keywords": [
                "Perform element-wise addition on two arrays.",
                "Apply a filter to the array to select specific elements.",
                "Combine two arrays into a new array.",
                "Find the maximum value in the array.",
                "Transpose the rows and columns of the matrix.",
                "Multiply each element in the array by a scalar.",
                "Concatenate multiple arrays along a specified axis.",
                "Search for a particular element in the array.",
                "Sort the elements of the array in ascending order.",
                "Sort the elements of the array in descending order.",
                "calculate the total of elements in the list.",
                "transform each item in the array.",
                "select specific elements from the list.",
                "Combine lists.",
                "Determine the maximum value in the array.",
                "Determine the minimum value in the array.",
                "Transpose a matrix .",
                "Multiply each element by a scalar.",
                "Concatenate lists using.",
                "Check for element existence with in keyword in Python.",
                "Sort the list in ascending order.",
                "Sort the list in descending order."
        
            ],
            "responses": [
                "Array intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Operators",
            "keywords": [
                "operators"
            ],
            "responses": [
                "iterative intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "OOP Operations",
            "keywords": [
                "Create a class 'Student' with a constructor initializing name and ID.",
                "Instantiate an object 'apple' from the 'Fruit' class with color and taste.",
                "Implement inheritance by creating a 'SUV' class derived from 'Car'.",
                "Encapsulate the 'BankAccount' class to protect the balance attribute.",
                "Extend the 'Shape' class to include a 'Triangle' with additional properties.",
                "Demonstrate polymorphism with 'add()' method accepting different data types.",
                "Declare a constant 'PI' in the 'Circle' class for mathematical calculations.",
                "Instantiate a 'Person' object and call the 'get_age()' method.",
                "Abstract the 'Animal' class with common methods for 'Dog' and 'Cat'.",
                "Create a class named 'Car' with attributes for make, model, and year.",
                "Define a method 'calculate_area()' in the 'Rectangle' class.",
                "Instantiate an object of the 'Person' class with name and age.",
                "Implement encapsulation by making the attributes of the 'Book' class private.",
                "Inherit the 'Employee' class from the 'Person' class for shared properties.",
                "Override the 'display()' method in the 'Child' class for custom behavior.",
                "Use polymorphism by accepting different types in the 'calculate()' method.",
                "Declare a static variable 'counter' in the 'Counter' class.",
                "Instantiate an object 'circle' from the 'Circle' class with a radius.",
                "Implement abstraction by defining abstract methods in the 'Shape' class.",
                "Define a method 'calculate_salary()' in the 'Employee' class."
        
            ],
            "responses": [
                "OOP intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Casting",
            "keywords": [
                "Convert an integer to a float using type casting.",
                "Cast a string to an integer using the 'int()' function.",
                "Change a float to an integer using the 'int()' function.",
                "Perform explicit casting from a string to a boolean.",
                "Convert a number to a string using the 'str()' function.",
                "Cast a character to its ASCII value using 'ord()'.",
                "Change a boolean to an integer using type casting.",
                "Convert a list to a tuple using the 'tuple()' function.",
                "Cast a string representation of a number to a float.",
                "Change a float to a string using the 'str()' function.",
                "Convert the variable 'num_str' from a string to an integer.",
                "Cast the 'temperature' variable from a float to an integer.",
                "Change the boolean 'flag_bool' to an integer.",
                "Transform the list 'num_list_str' to integers and store in 'num_list_int'.",
                "Convert the string 'grade_char' to an integer or another suitable type.",
                "Change the float 'price_float' to an integer or a string, depending on the use case.",
                "Cast the integer 'quantity_int' to a boolean.",
                "Convert the variable 'count' from an integer to a string.",
                "Transform the character 'grade_char' to its ASCII value or another relevant representation."
        
            ],
            "responses": [
                "casting intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Exception Handling",
            "keywords": [
                "Include error handling for potential exceptions in this block of code.",
                "Implement a mechanism to catch errors and handle exceptions gracefully.",
                "Surround this code with a try-catch block to manage unexpected issues.",
                "Add a layer of protection by incorporating exception handling in this section.",
                "Wrap the critical section with error-handling logic to ensure robustness.",
                "Guard against runtime errors by using a try-except structure.",
                "Handle exceptions gracefully to prevent unexpected crashes.",
                "Surround the risky operation with a try-catch block for error recovery.",
                "Incorporate defensive programming by adding exception handling here.",
                "Use a try-except block to manage potential errors during execution.",
                "Ensure fault tolerance by incorporating a try-except structure.",
                "Guard against runtime errors using a catch block for graceful handling.",
                "Surround this critical section with a try-catch block for error resilience.",
                "Implement defensive programming with a mechanism to catch unexpected issues.",
                "Wrap this code snippet in a try-except to manage potential exceptions.",
                "Add a layer of error protection using a try-catch structure.",
                "Handle unforeseen errors gracefully by implementing exception handling.",
                "Secure this section with a try-catch to capture and manage exceptions.",
                "Use a try-except block for better control over unexpected runtime errors.",
                "Incorporate a try-catch mechanism to gracefully handle exceptional cases."
        
            ],
            "responses": [
                "exception handling intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "I/O Operations",
            "keywords": [
                "Read user input from the console and store it in a variable.",
                "Take input from the user through the console for further processing.",
                "Output the result to the console for user feedback.",
                "Print a menu to the console for user navigation.",
                "Read multiple values from the console and assign them to variables.",
                "Display a formatted message on the console with dynamic content.",
                "Prompt the user in the console for a yes/no response.",
                "Take numerical input from the console for calculations.",
                "Output the contents of an array to the console.",
                "Accept a filename from the user via the console for file operations.",
                "Display error messages on the console for debugging purposes.",
                "Read a password input from the console with hidden characters.",
                "Prompt the user in the console to confirm an action.",
                "Take input from the console to set program configurations.",
                "Print a series of lines to the console for informational purposes.",
                "Display a progress indicator on the console for lengthy operations.",
                "Take input from the console to customize program settings.",
                "Output tabular data to the console in a readable format.",
                "Read user preferences from the console for personalized interactions.",
                "Display a message on the console to prompt user interaction."
        
            ],
            "responses": [
                "IO intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Assertion",
            "keywords": [
                "Include assert statements to confirm that the array index is within bounds.",
                "Use assertions to verify that the function result matches the expected output.",
                "Implement assert checks to ensure the validity of input parameters.",
                "Embed assert statements to confirm the non-emptiness of a critical data structure.",
                "Include assertions to validate the consistency of internal data representations.",
                "Utilize assert checks to ensure that file handles are properly initialized.",
                "Introduce assert statements to confirm the correctness of mathematical calculations.",
                "Use assertions to enforce the expected state of an object after method calls.",
                "Embed assert statements to validate preconditions for algorithmic functions.",
                "Include assert checks to verify the integrity of database queries and results.",
                "Use assert statements to catch unexpected conditions during iterative processes.",
                "Implement assertions to ensure the invariance of class properties and attributes.",
                "Include assert statements to confirm the proper initialization of global variables.",
                "Utilize assertions for runtime validation of configuration file settings.",
                "Embed assert checks to enforce constraints on user input before processing.",
                "Introduce assert statements to catch potential divide-by-zero scenarios.",
                "Use assertions to validate the correctness of state transitions in a finite state machine.",
                "Include assert statements to confirm the expected behavior of concurrent processes.",
                "Embed assert checks to enforce constraints on network communication protocols.",
                "Utilize assertions for validating the consistency of serialized/deserialized data."
        
            ],
            "responses": [
                "Assertion intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "Libraries",
            "keywords": [
                "Import the 'math' library for advanced mathematical functions.",
                "Use the 'requests' library to make HTTP requests in the code.",
                "Include the 'numpy' library for efficient array operations.",
                "Import the 'random' module for generating random numbers.",
                "Utilize the 'pandas' library for data manipulation and analysis.",
                "Include the 'matplotlib' library for creating data visualizations.",
                "Use the 'datetime' module to handle date and time operations.",
                "Import the 'json' module for working with JSON data.",
                "Include the 're' module for regular expression pattern matching.",
                "Use the 'os' module for interacting with the operating system.",
                "Import the 'csv' module to read and write CSV files.",
                "Include the 'tkinter' library for creating graphical user interfaces.",
                "Use the 'scikit-learn' library for machine learning tasks.",
                "Import the 'beautifulsoup4' library for web scraping.",
                "Include the 'tensorflow' library for deep learning applications.",
                "Use the 'flask' library to create web applications.",
                "Import the 'sqlite3' module for working with SQLite databases.",
                "Include the 'networkx' library for graph-based algorithms.",
                "Use the 'socket' module for network communication tasks.",
                "Import the 'unittest' module for writing and running unit tests."
            ],
            "responses": [
                "Libraries intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "IDE Interactions",
            "keywords":[
                "IDE"
            ],
            "responses": [
                "IDE Interactions intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        },
        {
            "intent": "File System",
            "keywords":[
                "create a file",
                "open file"
            ],
            "responses": [
                "File System intent detected"
            ],
            "extension": {
                "function":"",
                "entities": false,
                "responses": []
            },
            "entities": []
        }

    ]
}